{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd83436d1b3470fda298448ffb132ca4bcd7702b3b87ed5bb1aa4fb96b61ad604",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1028980",
    "logsBloom": "0x
    "blockHash": "0x72cfc7fd964e2fbffae2b9622a9e9bdb093fee3e15ebee7f0c2f8a53b46008d0",
    "transactionHash": "0xd83436d1b3470fda298448ffb132ca4bcd7702b3b87ed5bb1aa4fb96b61ad604",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1028980",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a2a539b7f26a52cb27aebbce2df6fd2c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    //State variables\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //Events\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Function order:\\n    //  constructor\\n    //  receive / fallback\\n    //  external\\n    //  public\\n    //  internal\\n    //  private\\n    //  view / pure\\n\\n    constructor(address _priceFeed) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x585ee238fa4f4226e853a6a9c03c663384683b41af2f9f873ab44bc46d4e9cce\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012c5380380620012c5833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61113f62000186600039600081816101e401528181610433015281816105be01526107b4015261113f6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a77565b610199565b6040516100b49190610abd565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610422565b6040516100e99190610abd565b60405180910390f35b3480156100fe57600080fd5b5061010761042f565b6040516101149190610ae7565b60405180910390f35b34801561012957600080fd5b50610132610457565b60405161013f9190610b61565b60405180910390f35b610150610481565b005b61015a6105bc565b005b34801561016857600080fd5b50610183600480360381019061017e9190610ba8565b61084a565b6040516101909190610ae7565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610bd5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c33565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c7c565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b506000908051906020019061037292919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039990610cdc565b60006040518083038185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b505090508061041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610d4e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104c0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089190919063ffffffff16565b1015610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610dba565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105509190610dda565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074f5760008282815181106106ec576106eb610bd5565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074790610c33565b9150506106ce565b50600067ffffffffffffffff81111561076b5761076a610c7c565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50600090805190602001906107af92919061096d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f690610cdc565b60006040518083038185875af1925050503d8060008114610833576040519150601f19603f3d011682016040523d82523d6000602084013e610838565b606091505b505090508061084657600080fd5b5050565b600080828154811061085f5761085e610bd5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061089d836108cd565b90506000670de0b6b3a764000085836108b69190610e30565b6108c09190610eb9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610f77565b5050509150506402540be400816109659190610ff2565b915050919050565b8280548282559060005260206000209081019282156109e6579160200282015b828111156109e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098d565b5b5090506109f391906109f7565b5090565b5b80821115610a105760008160009055506001016109f8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4482610a19565b9050919050565b610a5481610a39565b8114610a5f57600080fd5b50565b600081359050610a7181610a4b565b92915050565b600060208284031215610a8d57610a8c610a14565b5b6000610a9b84828501610a62565b91505092915050565b6000819050919050565b610ab781610aa4565b82525050565b6000602082019050610ad26000830184610aae565b92915050565b610ae181610a39565b82525050565b6000602082019050610afc6000830184610ad8565b92915050565b6000819050919050565b6000610b27610b22610b1d84610a19565b610b02565b610a19565b9050919050565b6000610b3982610b0c565b9050919050565b6000610b4b82610b2e565b9050919050565b610b5b81610b40565b82525050565b6000602082019050610b766000830184610b52565b92915050565b610b8581610aa4565b8114610b9057600080fd5b50565b600081359050610ba281610b7c565b92915050565b600060208284031215610bbe57610bbd610a14565b5b6000610bcc84828501610b93565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3e82610aa4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7157610c70610c04565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc6600083610cab565b9150610cd182610cb6565b600082019050919050565b6000610ce782610cb9565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d38600b83610cf1565b9150610d4382610d02565b602082019050919050565b60006020820190508181036000830152610d6781610d2b565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610da4601b83610cf1565b9150610daf82610d6e565b602082019050919050565b60006020820190508181036000830152610dd381610d97565b9050919050565b6000610de582610aa4565b9150610df083610aa4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2557610e24610c04565b5b828201905092915050565b6000610e3b82610aa4565b9150610e4683610aa4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7f57610e7e610c04565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ec482610aa4565b9150610ecf83610aa4565b925082610edf57610ede610e8a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0981610eea565b8114610f1457600080fd5b50565b600081519050610f2681610f00565b92915050565b6000819050919050565b610f3f81610f2c565b8114610f4a57600080fd5b50565b600081519050610f5c81610f36565b92915050565b600081519050610f7181610b7c565b92915050565b600080600080600060a08688031215610f9357610f92610a14565b5b6000610fa188828901610f17565b9550506020610fb288828901610f4d565b9450506040610fc388828901610f62565b9350506060610fd488828901610f62565b9250506080610fe588828901610f17565b9150509295509295909350565b6000610ffd82610f2c565b915061100883610f2c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104757611046610c04565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108457611083610c04565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c1576110c0610c04565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110fe576110fd610c04565b5b82820290509291505056fea2646970667358221220acd02e37bd3b44dab383af1ece5e5f18dd45f8896b2b662e2ede2b07fae8645764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a77565b610199565b6040516100b49190610abd565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610422565b6040516100e99190610abd565b60405180910390f35b3480156100fe57600080fd5b5061010761042f565b6040516101149190610ae7565b60405180910390f35b34801561012957600080fd5b50610132610457565b60405161013f9190610b61565b60405180910390f35b610150610481565b005b61015a6105bc565b005b34801561016857600080fd5b50610183600480360381019061017e9190610ba8565b61084a565b6040516101909190610ae7565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610bd5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c33565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c7c565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b506000908051906020019061037292919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039990610cdc565b60006040518083038185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b505090508061041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610d4e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104c0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089190919063ffffffff16565b1015610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610dba565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105509190610dda565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074f5760008282815181106106ec576106eb610bd5565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074790610c33565b9150506106ce565b50600067ffffffffffffffff81111561076b5761076a610c7c565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50600090805190602001906107af92919061096d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f690610cdc565b60006040518083038185875af1925050503d8060008114610833576040519150601f19603f3d011682016040523d82523d6000602084013e610838565b606091505b505090508061084657600080fd5b5050565b600080828154811061085f5761085e610bd5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061089d836108cd565b90506000670de0b6b3a764000085836108b69190610e30565b6108c09190610eb9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610f77565b5050509150506402540be400816109659190610ff2565b915050919050565b8280548282559060005260206000209081019282156109e6579160200282015b828111156109e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098d565b5b5090506109f391906109f7565b5090565b5b80821115610a105760008160009055506001016109f8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4482610a19565b9050919050565b610a5481610a39565b8114610a5f57600080fd5b50565b600081359050610a7181610a4b565b92915050565b600060208284031215610a8d57610a8c610a14565b5b6000610a9b84828501610a62565b91505092915050565b6000819050919050565b610ab781610aa4565b82525050565b6000602082019050610ad26000830184610aae565b92915050565b610ae181610a39565b82525050565b6000602082019050610afc6000830184610ad8565b92915050565b6000819050919050565b6000610b27610b22610b1d84610a19565b610b02565b610a19565b9050919050565b6000610b3982610b0c565b9050919050565b6000610b4b82610b2e565b9050919050565b610b5b81610b40565b82525050565b6000602082019050610b766000830184610b52565b92915050565b610b8581610aa4565b8114610b9057600080fd5b50565b600081359050610ba281610b7c565b92915050565b600060208284031215610bbe57610bbd610a14565b5b6000610bcc84828501610b93565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3e82610aa4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7157610c70610c04565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cc6600083610cab565b9150610cd182610cb6565b600082019050919050565b6000610ce782610cb9565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d38600b83610cf1565b9150610d4382610d02565b602082019050919050565b60006020820190508181036000830152610d6781610d2b565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610da4601b83610cf1565b9150610daf82610d6e565b602082019050919050565b60006020820190508181036000830152610dd381610d97565b9050919050565b6000610de582610aa4565b9150610df083610aa4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2557610e24610c04565b5b828201905092915050565b6000610e3b82610aa4565b9150610e4683610aa4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7f57610e7e610c04565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ec482610aa4565b9150610ecf83610aa4565b925082610edf57610ede610e8a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0981610eea565b8114610f1457600080fd5b50565b600081519050610f2681610f00565b92915050565b6000819050919050565b610f3f81610f2c565b8114610f4a57600080fd5b50565b600081519050610f5c81610f36565b92915050565b600081519050610f7181610b7c565b92915050565b600080600080600060a08688031215610f9357610f92610a14565b5b6000610fa188828901610f17565b9550506020610fb288828901610f4d565b9450506040610fc388828901610f62565b9350506060610fd488828901610f62565b9250506080610fe588828901610f17565b9150509295509295909350565b6000610ffd82610f2c565b915061100883610f2c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104757611046610c04565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108457611083610c04565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c1576110c0610c04565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110fe576110fd610c04565b5b82820290509291505056fea2646970667358221220acd02e37bd3b44dab383af1ece5e5f18dd45f8896b2b662e2ede2b07fae8645764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}